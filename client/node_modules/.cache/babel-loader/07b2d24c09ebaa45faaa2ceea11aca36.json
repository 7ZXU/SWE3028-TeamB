{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\may32\\\\Desktop\\\\workspace\\\\SWE3028-TeamB\\\\client\\\\src\\\\pages\\\\Template.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport '../css/Template.css';\nimport Challperson from '../components/Challperson';\nimport Cert from '../components/ChallengeCert';\nimport Todolist from '../components/TodoList';\nimport { MdCheckBox, MdCheckBoxOutlineBlank } from 'react-icons/md';\nimport mainImg from '../assets/1.jpg';\nimport Header from '../components/Header'; //const Template = ({ children, Myname, days, Yourname, days2 }) => {\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Template = () => {\n  _s();\n\n  const [insertToggle, setInsertToggle] = useState(false);\n\n  const onInsertToggle = () => {\n    setInsertToggle(prev => !prev);\n  };\n\n  const [challenges] = useState([{\n    id: 1,\n    done: true,\n    state: true,\n    checked: true,\n    cert: true\n  }, {\n    id: 2,\n    done: true,\n    state: true,\n    checked: true,\n    cert: true\n  }, {\n    id: 3,\n    done: false,\n    state: true,\n    checked: true,\n    cert: true\n  }, {\n    id: 4,\n    done: true,\n    state: true,\n    checked: true,\n    cert: true\n  }, {\n    id: 5,\n    done: true,\n    state: true,\n    checked: true,\n    cert: true\n  }, {\n    id: 6,\n    done: false,\n    state: true,\n    checked: true,\n    cert: true\n  }, {\n    id: 7,\n    done: true,\n    state: true,\n    checked: true,\n    cert: true\n  }, {\n    id: 8,\n    done: true,\n    state: true,\n    checked: true,\n    cert: true\n  }, {\n    id: 9,\n    done: false,\n    state: true,\n    checked: false,\n    cert: true\n  }, {\n    id: 10,\n    done: true,\n    state: true,\n    checked: true,\n    cert: true\n  }, {\n    id: 11,\n    done: true,\n    state: true,\n    checked: true,\n    cert: true\n  }, {\n    id: 12,\n    done: false,\n    state: true,\n    checked: true,\n    cert: true\n  }, {\n    id: 13,\n    done: true,\n    state: true,\n    checked: true,\n    cert: true\n  }, {\n    id: 14,\n    done: true,\n    state: true,\n    checked: true,\n    cert: true\n  }, {\n    id: 15,\n    done: false,\n    state: true,\n    checked: true,\n    cert: false\n  }, {\n    id: 16,\n    done: true,\n    state: true,\n    checked: false,\n    cert: false\n  }, {\n    id: 17,\n    done: true,\n    state: false,\n    checked: false,\n    cert: false\n  }, {\n    id: 18,\n    done: false,\n    state: false,\n    checked: false,\n    cert: false\n  }, {\n    id: 19,\n    done: true,\n    state: false,\n    checked: true,\n    cert: false\n  }, {\n    id: 20,\n    done: true,\n    state: false,\n    checked: false,\n    cert: false\n  }, {\n    id: 21,\n    done: false,\n    state: false,\n    checked: false,\n    cert: false\n  }, {\n    id: 22,\n    done: true,\n    state: false,\n    checked: true,\n    cert: false\n  }, {\n    id: 23,\n    done: true,\n    state: false,\n    checked: false,\n    cert: false\n  }, {\n    id: 24,\n    done: false,\n    state: false,\n    checked: false,\n    cert: false\n  }, {\n    id: 25,\n    done: true,\n    state: false,\n    checked: true,\n    cert: false\n  }, {\n    id: 26,\n    done: true,\n    state: false,\n    checked: false,\n    cert: false\n  }, {\n    id: 27,\n    done: false,\n    state: false,\n    checked: false,\n    cert: false\n  }, {\n    id: 28,\n    done: true,\n    state: false,\n    checked: true,\n    cert: false\n  }, {\n    id: 29,\n    done: true,\n    state: false,\n    checked: false,\n    cert: false\n  }, {\n    id: 30,\n    done: false,\n    state: false,\n    checked: false,\n    cert: false\n  }]);\n  const Myname = '곽무진';\n  const days = challenges;\n  const Yourname = '곽진무';\n  const days2 = challenges;\n  const [todos, setTodos] = useState([{\n    id: 1,\n    text: '할일 1',\n    checked: true\n  }, {\n    id: 2,\n    text: '할일 2',\n    checked: false\n  }, {\n    id: 3,\n    text: '할일 3',\n    checked: true\n  }]);\n  const [Cinfo, setCinfo] = useState({\n    name: 'challenge',\n    date: '2021-11-1 ~ 2021-11-30'\n  });\n  const [todocert, settodocert] = useState({\n    id: '',\n    isempty: ''\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Template\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Router\",\n      children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ChallengeName\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"Challimg\",\n        src: mainImg,\n        alt: \"\\uCC4C\\uB9B0\\uC9C0 \\uC774\\uBBF8\\uC9C0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), Cinfo.name, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: Cinfo.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Template1\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Myname\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Name\",\n          onClick: onInsertToggle,\n          children: [' ', \"Me: \", Myname, insertToggle && /*#__PURE__*/_jsxDEV(Challperson, {\n            onInsertToggle: onInsertToggle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Challenge-days\",\n          children: days.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ChallengeDays\",\n            cert: day.cert,\n            onClick: () => settodocert({\n              id: day.id,\n              isempty: day.cert\n            }),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: 'content ${checked ? \"checked\" : \"\"}',\n              children: [day.state && day.done && day.checked && /*#__PURE__*/_jsxDEV(MdCheckBoxOutlineBlank, {\n                size: \"30\",\n                color: \"green\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 21\n              }, this), !day.state && /*#__PURE__*/_jsxDEV(MdCheckBoxOutlineBlank, {\n                size: \"30\",\n                color: \"gray\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 21\n              }, this), day.state && !day.checked && /*#__PURE__*/_jsxDEV(MdCheckBoxOutlineBlank, {\n                size: \"30\",\n                color: \"yellow\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 21\n              }, this), day.state && day.checked && !day.done && /*#__PURE__*/_jsxDEV(MdCheckBoxOutlineBlank, {\n                size: \"30\",\n                color: \"red\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this)\n          }, day.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Myname\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Name\",\n          onClick: onInsertToggle,\n          children: [' ', \"Mate: \", Yourname, insertToggle && /*#__PURE__*/_jsxDEV(Challperson, {\n            onInsertToggle: onInsertToggle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Challenge-days\",\n          children: days2.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ChallengeDays\",\n            cert: day.cert,\n            onClick: () => settodocert({\n              id: day.id,\n              isempty: day.cert\n            }),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: 'content ${checked ? \"checked\" : \"\"}',\n              children: [day.state && day.done && day.checked && /*#__PURE__*/_jsxDEV(MdCheckBoxOutlineBlank, {\n                size: \"30\",\n                color: \"green\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 21\n              }, this), !day.state && /*#__PURE__*/_jsxDEV(MdCheckBoxOutlineBlank, {\n                size: \"30\",\n                color: \"gray\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 21\n              }, this), day.state && !day.checked && /*#__PURE__*/_jsxDEV(MdCheckBoxOutlineBlank, {\n                size: \"30\",\n                color: \"yellow\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 21\n              }, this), day.state && day.checked && !day.done && /*#__PURE__*/_jsxDEV(MdCheckBoxOutlineBlank, {\n                size: \"30\",\n                color: \"red\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this)\n          }, day.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Template2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: [\"Todo list(\", todos.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Todolist, {\n        todos: todos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Template3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Certification\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Cert, {\n        Cday: todos.length,\n        cert: todocert.isempty\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Template, \"rp7AmsIv7iZs3499kMGQNymSZOs=\");\n\n_c = Template;\nexport default Template; //{days.map(day => (<Days day = {day} key={day.id}  cert = {day.cert} />))}\n\nvar _c;\n\n$RefreshReg$(_c, \"Template\");","map":{"version":3,"sources":["C:/Users/may32/Desktop/workspace/SWE3028-TeamB/client/src/pages/Template.js"],"names":["React","useState","Challperson","Cert","Todolist","MdCheckBox","MdCheckBoxOutlineBlank","mainImg","Header","Template","insertToggle","setInsertToggle","onInsertToggle","prev","challenges","id","done","state","checked","cert","Myname","days","Yourname","days2","todos","setTodos","text","Cinfo","setCinfo","name","date","todocert","settodocert","isempty","map","day","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport '../css/Template.css';\r\nimport Challperson from '../components/Challperson';\r\nimport Cert from '../components/ChallengeCert';\r\nimport Todolist from '../components/TodoList';\r\nimport { MdCheckBox, MdCheckBoxOutlineBlank } from 'react-icons/md';\r\nimport mainImg from '../assets/1.jpg';\r\nimport Header from '../components/Header';\r\n\r\n//const Template = ({ children, Myname, days, Yourname, days2 }) => {\r\nconst Template = () => {\r\n  const [insertToggle, setInsertToggle] = useState(false);\r\n  const onInsertToggle = () => {\r\n    setInsertToggle((prev) => !prev);\r\n  };\r\n\r\n  const [challenges] = useState([\r\n    { id: 1, done: true, state: true, checked: true, cert: true },\r\n    { id: 2, done: true, state: true, checked: true, cert: true },\r\n    { id: 3, done: false, state: true, checked: true, cert: true },\r\n    { id: 4, done: true, state: true, checked: true, cert: true },\r\n    { id: 5, done: true, state: true, checked: true, cert: true },\r\n    { id: 6, done: false, state: true, checked: true, cert: true },\r\n    { id: 7, done: true, state: true, checked: true, cert: true },\r\n    { id: 8, done: true, state: true, checked: true, cert: true },\r\n    { id: 9, done: false, state: true, checked: false, cert: true },\r\n    { id: 10, done: true, state: true, checked: true, cert: true },\r\n    { id: 11, done: true, state: true, checked: true, cert: true },\r\n    { id: 12, done: false, state: true, checked: true, cert: true },\r\n    { id: 13, done: true, state: true, checked: true, cert: true },\r\n    { id: 14, done: true, state: true, checked: true, cert: true },\r\n    { id: 15, done: false, state: true, checked: true, cert: false },\r\n    { id: 16, done: true, state: true, checked: false, cert: false },\r\n    { id: 17, done: true, state: false, checked: false, cert: false },\r\n    { id: 18, done: false, state: false, checked: false, cert: false },\r\n    { id: 19, done: true, state: false, checked: true, cert: false },\r\n    { id: 20, done: true, state: false, checked: false, cert: false },\r\n    { id: 21, done: false, state: false, checked: false, cert: false },\r\n    { id: 22, done: true, state: false, checked: true, cert: false },\r\n    { id: 23, done: true, state: false, checked: false, cert: false },\r\n    { id: 24, done: false, state: false, checked: false, cert: false },\r\n    { id: 25, done: true, state: false, checked: true, cert: false },\r\n    { id: 26, done: true, state: false, checked: false, cert: false },\r\n    { id: 27, done: false, state: false, checked: false, cert: false },\r\n    { id: 28, done: true, state: false, checked: true, cert: false },\r\n    { id: 29, done: true, state: false, checked: false, cert: false },\r\n    { id: 30, done: false, state: false, checked: false, cert: false },\r\n  ]);\r\n\r\n  const Myname = '곽무진';\r\n  const days = challenges;\r\n  const Yourname = '곽진무';\r\n  const days2 = challenges;\r\n\r\n  const [todos, setTodos] = useState([\r\n    {\r\n      id: 1,\r\n      text: '할일 1',\r\n      checked: true,\r\n    },\r\n    {\r\n      id: 2,\r\n      text: '할일 2',\r\n      checked: false,\r\n    },\r\n    {\r\n      id: 3,\r\n      text: '할일 3',\r\n      checked: true,\r\n    },\r\n  ]);\r\n  const [Cinfo, setCinfo] = useState({\r\n    name: 'challenge',\r\n    date: '2021-11-1 ~ 2021-11-30',\r\n  });\r\n\r\n  const [todocert, settodocert] = useState({ id: '', isempty: '' });\r\n\r\n  return (\r\n    <div className=\"Template\">\r\n      <div className=\"Router\">\r\n        {/* {' '}\r\n        <div className=\"Router1\">내정보</div>{' '}\r\n        <div className=\"Router2\">캘린더</div>{' '}\r\n        <div className=\"Router3\">챌린지</div> */}\r\n        <Header />\r\n      </div>\r\n      <div className=\"ChallengeName\">\r\n        <img className=\"Challimg\" src={mainImg} alt=\"챌린지 이미지\" />\r\n        {Cinfo.name}\r\n        <div>{Cinfo.date}</div>\r\n      </div>\r\n      <div className=\"Template1\">\r\n        <div className=\"Myname\">\r\n          <div className=\"Name\" onClick={onInsertToggle}>\r\n            {' '}\r\n            Me: {Myname}\r\n            {insertToggle && <Challperson onInsertToggle={onInsertToggle} />}\r\n          </div>\r\n          <div className=\"Challenge-days\">\r\n            {days.map((day) => (\r\n              <div\r\n                className=\"ChallengeDays\"\r\n                key={day.id}\r\n                cert={day.cert}\r\n                onClick={() => settodocert({ id: day.id, isempty: day.cert })}\r\n              >\r\n                <div className={'content ${checked ? \"checked\" : \"\"}'}>\r\n                  {day.state && day.done && day.checked && (\r\n                    <MdCheckBoxOutlineBlank size=\"30\" color=\"green\" />\r\n                  )}\r\n                  {!day.state && (\r\n                    <MdCheckBoxOutlineBlank size=\"30\" color=\"gray\" />\r\n                  )}\r\n                  {day.state && !day.checked && (\r\n                    <MdCheckBoxOutlineBlank size=\"30\" color=\"yellow\" />\r\n                  )}\r\n                  {day.state && day.checked && !day.done && (\r\n                    <MdCheckBoxOutlineBlank size=\"30\" color=\"red\" />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"Myname\">\r\n          <div className=\"Name\" onClick={onInsertToggle}>\r\n            {' '}\r\n            Mate: {Yourname}\r\n            {insertToggle && <Challperson onInsertToggle={onInsertToggle} />}\r\n          </div>\r\n\r\n          <div className=\"Challenge-days\">\r\n            {days2.map((day) => (\r\n              <div\r\n                className=\"ChallengeDays\"\r\n                key={day.id}\r\n                cert={day.cert}\r\n                onClick={() => settodocert({ id: day.id, isempty: day.cert })}\r\n              >\r\n                <div className={'content ${checked ? \"checked\" : \"\"}'}>\r\n                  {day.state && day.done && day.checked && (\r\n                    <MdCheckBoxOutlineBlank size=\"30\" color=\"green\" />\r\n                  )}\r\n                  {!day.state && (\r\n                    <MdCheckBoxOutlineBlank size=\"30\" color=\"gray\" />\r\n                  )}\r\n                  {day.state && !day.checked && (\r\n                    <MdCheckBoxOutlineBlank size=\"30\" color=\"yellow\" />\r\n                  )}\r\n                  {day.state && day.checked && !day.done && (\r\n                    <MdCheckBoxOutlineBlank size=\"30\" color=\"red\" />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"Template2\">\r\n        <div className=\"title\">Todo list({todos.length})</div>\r\n        <Todolist todos={todos} />\r\n      </div>\r\n\r\n      <div className=\"Template3\">\r\n        <div className=\"title\">Certification</div>\r\n        <Cert Cday={todos.length} cert={todocert.isempty} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Template;\r\n\r\n//{days.map(day => (<Days day = {day} key={day.id}  cert = {day.cert} />))}\r\n"]},"metadata":{},"sourceType":"module"}