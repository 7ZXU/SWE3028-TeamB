{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sksms\\\\Desktop\\\\temp\\\\SWE3028-TeamB\\\\client\\\\src\\\\components\\\\LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport InputText from './InputText';\nimport styled from 'styled-components';\nimport { Link, Redirect } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Button = styled.button`\n  cursor: pointer;\n  width: 100%;\n  border: 2px solid #000000;\n  color: #ffffff;\n  background: #000000;\n  outline: none;\n  border-radius: 10px;\n  line-height: 2.5rem;\n  font-size: 1.5rem;\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n  margin-top: 1.5rem;\n\n  & > Link {\n    color: #ffffff;\n  }\n\n  &:hover {\n    background-color: #ffffff;\n    color: #000000;\n  }\n`;\n_c = Button;\nconst Aligner = styled.div`\n  margin-top: 10px;\n  text-align: right;\n`;\n_c2 = Aligner;\nconst StyledLink = styled(Link)`\n  color: #ffffff;\n  cursor: pointer;\n`;\n\nfunction LoginForm({\n  to\n}) {\n  _s();\n\n  const [user, setuser] = useState([]);\n  useEffect(async () => {\n    try {\n      const res = await axios.get('http://localhost:5000/api/user');\n\n      const _inputData = await res.data.map(rowData => ({\n        id: rowData.id,\n        password: rowData.password,\n        name: rowData.name,\n        nickname: rowData.nickname,\n        email: rowData.email\n      }));\n\n      setuser(user.concat(_inputData));\n    } catch (e) {\n      console.error(e.message);\n    }\n  }, []);\n  const [inputId, setInputId] = useState('');\n  const [inputPw, setInputPw] = useState('');\n\n  const handleInputId = e => {\n    setInputId(e.target.value);\n  };\n\n  const handleInputPw = e => {\n    setInputPw(e.target.value);\n  };\n\n  const onClickLogin = () => {\n    const userss = user.find(user => user.id === inputId);\n\n    if (!userss || userss.password !== inputPw) {\n      onInsertToggle2();\n    } else {\n      onInsertToggle();\n      return userss;\n    }\n  };\n\n  const [valid, setvalid] = useState(false);\n\n  const onInsertToggle = () => {\n    setvalid(prev => !prev);\n  };\n\n  const [notvalid, setnotvalid] = useState(false);\n\n  const onInsertToggle2 = () => {\n    setnotvalid(prev => !prev);\n  };\n\n  const enterId = e => {\n    const userId = inputId;\n    const userPassword = inputPw;\n    axios.post(\"/api/user\", {\n      userId,\n      userPassword\n    }).then(response => {\n      console.log(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(InputText, {\n      name: \"email\",\n      placeholder: \"ID...\",\n      value: inputId,\n      onChange: handleInputId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputText, {\n      name: \"password\",\n      placeholder: \"PW...\",\n      type: \"password\",\n      value: inputPw,\n      onChange: handleInputPw\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      id: inputId,\n      password: inputPw,\n      onClick: onClickLogin,\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Aligner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(LoginForm, \"3JbRSSz/QJ/m6Uv8vATHwYjZp3Y=\");\n\n_c3 = LoginForm;\nexport default LoginForm;\n/*{valid && <Redirect to={to}/>}\n      {notvalid && <div>id 또는 비밀번호를 확인해 주세요</div>}*/\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Aligner\");\n$RefreshReg$(_c3, \"LoginForm\");","map":{"version":3,"sources":["C:/Users/sksms/Desktop/temp/SWE3028-TeamB/client/src/components/LoginForm.js"],"names":["React","InputText","styled","Link","Redirect","useState","useEffect","axios","Button","button","Aligner","div","StyledLink","LoginForm","to","user","setuser","res","get","_inputData","data","map","rowData","id","password","name","nickname","email","concat","e","console","error","message","inputId","setInputId","inputPw","setInputPw","handleInputId","target","value","handleInputPw","onClickLogin","userss","find","onInsertToggle2","onInsertToggle","valid","setvalid","prev","notvalid","setnotvalid","enterId","userId","userPassword","post","then","response","log","catch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport InputText from './InputText';\nimport styled from 'styled-components';\nimport { Link, Redirect } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Button = styled.button`\n  cursor: pointer;\n  width: 100%;\n  border: 2px solid #000000;\n  color: #ffffff;\n  background: #000000;\n  outline: none;\n  border-radius: 10px;\n  line-height: 2.5rem;\n  font-size: 1.5rem;\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n  margin-top: 1.5rem;\n\n  & > Link {\n    color: #ffffff;\n  }\n\n  &:hover {\n    background-color: #ffffff;\n    color: #000000;\n  }\n`;\n\nconst Aligner = styled.div`\n  margin-top: 10px;\n  text-align: right;\n`;\n\nconst StyledLink = styled(Link)`\n  color: #ffffff;\n  cursor: pointer;\n`;\n\n\n\n    \n\n\n\nfunction LoginForm({ to }) {\n\n  const [user, setuser] = useState([\n    \n  ]);\n  \n  \n   useEffect (async() => {\n    try{\n      const res = await axios.get('http://localhost:5000/api/user')\n      const _inputData = await res.data.map((rowData) => ({\n              id: rowData.id,\n              password: rowData.password,\n              name: rowData.name,\n              nickname: rowData.nickname,\n              email: rowData.email\n            })\n      )\n      setuser(user.concat(_inputData))\n    } catch(e){\n      console.error(e.message)\n    }\n  }, []);\n  \n  const [inputId, setInputId] = useState('')\n      const [inputPw, setInputPw] = useState('')\n   \n      const handleInputId = (e) => {\n          setInputId(e.target.value)\n      }\n   \n      const handleInputPw = (e) => {\n          setInputPw(e.target.value)\n      }\n   \n\n      const onClickLogin = () => {\n        const userss = user.find((user) => user.id === inputId);\n        if (!userss || userss.password !== inputPw) {\n          onInsertToggle2();\n        }\n        else {onInsertToggle(); return userss}\n      }\n\n      const [valid, setvalid] = useState(false)\n      const onInsertToggle = () => {\n        setvalid((prev) => !prev);\n      };\n      \n\n      const [notvalid, setnotvalid] = useState(false)\n      const onInsertToggle2 = () => {\n        setnotvalid((prev) => !prev);\n      };\n\n      const enterId = (e) => {\n        const userId = inputId;\n        const userPassword = inputPw;\n        axios\n          .post(\"/api/user\", {\n            userId,\n            userPassword,\n          })\n          .then((response) => {\n            console.log(response.data);\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      };\n\n  return (\n    <>\n      <InputText name=\"email\" placeholder=\"ID...\" value={inputId} onChange={handleInputId} />\n      <InputText name=\"password\" placeholder=\"PW...\" type=\"password\" value={inputPw} onChange={handleInputPw} />\n      <Button id = {inputId} password = {inputPw} onClick={onClickLogin} >로그인</Button>\n      \n\n      <Aligner>\n        {/* <StyledLink to={to}>아이디가 없으신가요?</StyledLink> */}\n      </Aligner>\n    </>\n  );\n}\n\nexport default LoginForm;\n\n/*{valid && <Redirect to={to}/>}\n      {notvalid && <div>id 또는 비밀번호를 확인해 주세요</div>}*/\n"]},"metadata":{},"sourceType":"module"}